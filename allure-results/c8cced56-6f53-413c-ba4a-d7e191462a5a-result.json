{"name": "Создание заказа с авторизацией и без", "status": "failed", "statusDetails": {"message": "AssertionError: Неверный код: {\"success\":false,\"message\":\"jwt malformed\"}\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "self = <test_order.TestOrders object at 0x00000264290D87D0>, auth = True\nauth_token = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZDA3OWMwOWVkMjgwMDAxYjZhNjkzOSIsImlhdCI6MTc1ODQ5MzEyMSwiZXhwIjoxNzU4NDk0MzIxfQ.L8IhfMJcGMgi2owStam9zOOcmeWp3FGp4fcZFRJeyXA'\n\n    @allure.title(\"Создание заказа с авторизацией и без\")\n    @pytest.mark.parametrize(\"auth\", [True, False])\n    def test_create_order(self, auth, auth_token):\n        \"\"\"\n        Проверяем создание заказа с авторизацией и без неё.\n        \"\"\"\n        ingredients = get_ingredients()\n        token = auth_token if auth else None\n    \n        with allure.step(f\"Создание заказа (auth={auth})\"):\n            response = create_order(ingredients, token)\n    \n        with allure.step(\"Проверка ответа\"):\n            if auth or not auth:  # если API разрешает анонимные заказы\n>               assert response.status_code == 200, f\"Неверный код: {response.text}\"\nE               AssertionError: Неверный код: {\"success\":false,\"message\":\"jwt malformed\"}\nE               assert 403 == 200\nE                +  where 403 = <Response [403]>.status_code\n\ntests\\test_order.py:24: AssertionError"}, "description": "\nПроверяем создание заказа с авторизацией и без неё.\n", "steps": [{"name": "Создание заказа (auth=True)", "status": "passed", "steps": [{"name": "Создание заказа с ингредиентами: ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa70', '61c0c5a71d1f82001bdaaa71', '61c0c5a71d1f82001bdaaa72', '61c0c5a71d1f82001bdaaa6e', '61c0c5a71d1f82001bdaaa73', '61c0c5a71d1f82001bdaaa74', '61c0c5a71d1f82001bdaaa6c', '61c0c5a71d1f82001bdaaa75', '61c0c5a71d1f82001bdaaa76', '61c0c5a71d1f82001bdaaa77', '61c0c5a71d1f82001bdaaa78', '61c0c5a71d1f82001bdaaa79', '61c0c5a71d1f82001bdaaa7a']", "status": "passed", "start": 1758493120928, "stop": 1758493121387}], "start": 1758493120928, "stop": 1758493121387}, {"name": "Проверка ответа", "status": "failed", "statusDetails": {"message": "AssertionError: Неверный код: {\"success\":false,\"message\":\"jwt malformed\"}\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code\n", "trace": "  File \"C:\\Users\\dariy\\Diplom\\diplom_2\\tests\\test_order.py\", line 24, in test_create_order\n    assert response.status_code == 200, f\"Неверный код: {response.text}\"\n"}, "start": 1758493121387, "stop": 1758493121387}], "parameters": [{"name": "auth", "value": "True"}], "start": 1758493120442, "stop": 1758493121388, "uuid": "b15c14ed-54b1-4bf3-b96e-97b61a483f18", "historyId": "d3d2f11f0f8c3b13d1dd1edddd27994c", "testCaseId": "18bec24c492f6eff9f861b5abf56ec4a", "fullName": "tests.test_order.TestOrders#test_create_order", "labels": [{"name": "feature", "value": "Заказы"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrders"}, {"name": "host", "value": "DARIYA"}, {"name": "thread", "value": "10136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}], "titlePath": ["tests", "test_order.py", "TestOrders"]}